
# List manipulation 
define mylen (n) {
    if empty (n) {
        0
    } else {
        1 + mylen (rest (n))
    }
}

# mylen ([1, 3, 3, 5, 6, 7])

# Closures 
define adder (a) {
    fun (b) { 
        a + b
    }
}
define add10 adder (10)
define result add10 (10)



# Tail rec 
define sum (acc, start, finish) {
    if start > finish {
        acc
    } else { 
        sum (acc+start, start+1, finish)
    }
}
# sum (0, 1, 1000000)

length
print
sum

define append (as, bs) {
    if empty (as) {
        bs 
    } else {
        let a = first (as); 
        let as = rest (as);
        cons (a, append (as, bs))
    }
}

append ([1,2,3], [4, 5, 6])